import connexion
import six

from bson import json_util
from synprov.models.json_activity import JsonActivity  # noqa: E501
from synprov.models.json_activity_request import JsonActivityRequest  # noqa: E501
from synprov.models.json_paginated_results_of_reference import JsonPaginatedResultsOfReference  # noqa: E501
from synprov import util
from synprov.config import mongo


def create_activity(body):  # noqa: E501
    """Create a new.

    Create a new &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot; &gt;Activity&lt;/a&gt;. If the passed &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; object contains a &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Used}\&quot; &gt;Used&lt;/a&gt; array, you must set the concreteType field of each Used subclass. &lt;p&gt; Access Control: READ access is granted to those users who can see a single Entity that was generated by this Activity. &lt;/p&gt; # noqa: E501

    :param body: 
    :type body: dict | bytes

    :rtype: JsonActivity
    """
    if connexion.request.is_json:
        body = JsonActivityRequest.from_dict(connexion.request.get_json())  # noqa: E501
    activity = JsonActivity().to_dict()
    activity.update(body.to_dict())
    activity_id = mongo.db.activities.insert_one(activity).inserted_id

    return json_util.dumps(mongo.db.activities.find_one({'_id': activity_id}))


def delete_activity(id, user_id, body=None):  # noqa: E501
    """Delete an.

    Delete an &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt;&lt;b&gt;Access Control&lt;/b&gt;: You must be the creator of the Activity to delete it.&lt;/p&gt; # noqa: E501

    :param id: The id of activity to delete.
    :type id: str
    :param user_id: The user that is deleting the activity.
    :type user_id: float
    :param body: Delete an &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt;&lt;b&gt;Access Control&lt;/b&gt;: You must be the creator of the Activity to delete it.&lt;/p&gt;
    :type body: str

    :rtype: file
    """
    return 'do some magic!'


def get_activity(id, user_id, body=None):  # noqa: E501
    """Get an existing.

    Get an existing &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt; &lt;b&gt;Access Control&lt;/b&gt;: Granted to those users who can see a single Entity that was generated by this Activity. &lt;/p&gt; # noqa: E501

    :param id: The ID of the activity to fetch.
    :type id: str
    :param user_id: The user that is doing the get.
    :type user_id: float
    :param body: Get an existing &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt; &lt;b&gt;Access Control&lt;/b&gt;: Granted to those users who can see a single Entity that was generated by this Activity. &lt;/p&gt;
    :type body: str

    :rtype: JsonActivity
    """
    return 'do some magic!'


def get_entities_generated_by(id, user_id, limit=None, offset=None):  # noqa: E501
    """.

    &lt;p&gt; Get the &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.Entity}\&quot;&gt;Entities&lt;/a&gt; that were generatedBy an &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot; &gt;Activity&lt;/a&gt;. Returns a &lt;a href&#x3D;\&quot;${org.sagebionetworks.reflection.model.PaginatedResults}\&quot;&gt; PaginatedResults&lt;/a&gt; of &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.Reference}\&quot;&gt;Reference&lt;/a&gt; objects. &lt;/p&gt; &lt;p&gt; &lt;b&gt;Access Control&lt;/b&gt;: This service will return References to all generatedBy Entities, regardless of whether you have access to resolve them into full Entity objects. &lt;/p&gt; # noqa: E501

    :param id: 
    :type id: str
    :param user_id: 
    :type user_id: float
    :param limit: 
    :type limit: int
    :param offset: 
    :type offset: int

    :rtype: JsonPaginatedResultsOfReference
    """
    return 'do some magic!'


def update_activity(id, user_id, body=None):  # noqa: E501
    """Update an.

    Update an &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt;&lt;b&gt;Access Control&lt;/b&gt;: You must be the creator of the Activity to modify it.&lt;/p&gt; # noqa: E501

    :param id: The id of the activity to update.
    :type id: str
    :param user_id: The user that is doing the update.
    :type user_id: float
    :param body: Update an &lt;a href&#x3D;\&quot;${org.sagebionetworks.repo.model.provenance.Activity}\&quot;&gt;Activity&lt;/a&gt; &lt;p&gt;&lt;b&gt;Access Control&lt;/b&gt;: You must be the creator of the Activity to modify it.&lt;/p&gt;
    :type body: str

    :rtype: JsonActivity
    """
    return 'do some magic!'
