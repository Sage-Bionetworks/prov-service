# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov import util


class D3Link(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, type=None, start_node=None, end_node=None, properties=None, source=None, target=None, linknum=None):  # noqa: E501
        """D3Link - a model defined in OpenAPI

        :param id: The id of this D3Link.  # noqa: E501
        :type id: str
        :param type: The type of this D3Link.  # noqa: E501
        :type type: str
        :param start_node: The start_node of this D3Link.  # noqa: E501
        :type start_node: str
        :param end_node: The end_node of this D3Link.  # noqa: E501
        :type end_node: str
        :param properties: The properties of this D3Link.  # noqa: E501
        :type properties: object
        :param source: The source of this D3Link.  # noqa: E501
        :type source: str
        :param target: The target of this D3Link.  # noqa: E501
        :type target: str
        :param linknum: The linknum of this D3Link.  # noqa: E501
        :type linknum: int
        """
        self.openapi_types = {
            'id': str,
            'type': str,
            'start_node': str,
            'end_node': str,
            'properties': object,
            'source': str,
            'target': str,
            'linknum': int
        }

        self.attribute_map = {
            'id': 'id',
            'type': 'type',
            'start_node': 'startNode',
            'end_node': 'endNode',
            'properties': 'properties',
            'source': 'source',
            'target': 'target',
            'linknum': 'linknum'
        }

        self._id = id
        self._type = type
        self._start_node = start_node
        self._end_node = end_node
        self._properties = properties
        self._source = source
        self._target = target
        self._linknum = linknum

    @classmethod
    def from_dict(cls, dikt) -> 'D3Link':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The D3Link of this D3Link.  # noqa: E501
        :rtype: D3Link
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this D3Link.


        :return: The id of this D3Link.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this D3Link.


        :param id: The id of this D3Link.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this D3Link.


        :return: The type of this D3Link.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this D3Link.


        :param type: The type of this D3Link.
        :type type: str
        """

        self._type = type

    @property
    def start_node(self):
        """Gets the start_node of this D3Link.


        :return: The start_node of this D3Link.
        :rtype: str
        """
        return self._start_node

    @start_node.setter
    def start_node(self, start_node):
        """Sets the start_node of this D3Link.


        :param start_node: The start_node of this D3Link.
        :type start_node: str
        """

        self._start_node = start_node

    @property
    def end_node(self):
        """Gets the end_node of this D3Link.


        :return: The end_node of this D3Link.
        :rtype: str
        """
        return self._end_node

    @end_node.setter
    def end_node(self, end_node):
        """Sets the end_node of this D3Link.


        :param end_node: The end_node of this D3Link.
        :type end_node: str
        """

        self._end_node = end_node

    @property
    def properties(self):
        """Gets the properties of this D3Link.


        :return: The properties of this D3Link.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this D3Link.


        :param properties: The properties of this D3Link.
        :type properties: object
        """

        self._properties = properties

    @property
    def source(self):
        """Gets the source of this D3Link.


        :return: The source of this D3Link.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this D3Link.


        :param source: The source of this D3Link.
        :type source: str
        """

        self._source = source

    @property
    def target(self):
        """Gets the target of this D3Link.


        :return: The target of this D3Link.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this D3Link.


        :param target: The target of this D3Link.
        :type target: str
        """

        self._target = target

    @property
    def linknum(self):
        """Gets the linknum of this D3Link.


        :return: The linknum of this D3Link.
        :rtype: int
        """
        return self._linknum

    @linknum.setter
    def linknum(self, linknum):
        """Sets the linknum of this D3Link.


        :param linknum: The linknum of this D3Link.
        :type linknum: int
        """

        self._linknum = linknum
