# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov.models.neo_graph_graph import NeoGraphGraph
from synprov import util


class NeoGraphData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graph=None):  # noqa: E501
        """NeoGraphData - a model defined in OpenAPI

        :param graph: The graph of this NeoGraphData.  # noqa: E501
        :type graph: NeoGraphGraph
        """
        self.openapi_types = {
            'graph': NeoGraphGraph
        }

        self.attribute_map = {
            'graph': 'graph'
        }

        self._graph = graph

    @classmethod
    def from_dict(cls, dikt) -> 'NeoGraphData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NeoGraph_data of this NeoGraphData.  # noqa: E501
        :rtype: NeoGraphData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graph(self):
        """Gets the graph of this NeoGraphData.


        :return: The graph of this NeoGraphData.
        :rtype: NeoGraphGraph
        """
        return self._graph

    @graph.setter
    def graph(self, graph):
        """Sets the graph of this NeoGraphData.


        :param graph: The graph of this NeoGraphData.
        :type graph: NeoGraphGraph
        """

        self._graph = graph
