# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov.models.json_reference import JsonReference
from synprov import util

from synprov.models.json_reference import JsonReference  # noqa: E501

class JsonUsed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference=None, was_executed=None):  # noqa: E501
        """JsonUsed - a model defined in OpenAPI

        :param reference: The reference of this JsonUsed.  # noqa: E501
        :type reference: JsonReference
        :param was_executed: The was_executed of this JsonUsed.  # noqa: E501
        :type was_executed: bool
        """
        self.openapi_types = {
            'reference': JsonReference,
            'was_executed': bool
        }

        self.attribute_map = {
            'reference': 'reference',
            'was_executed': 'wasExecuted'
        }

        self._reference = reference
        self._was_executed = was_executed

    @classmethod
    def from_dict(cls, dikt) -> 'JsonUsed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The json_Used of this JsonUsed.  # noqa: E501
        :rtype: JsonUsed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference(self):
        """Gets the reference of this JsonUsed.


        :return: The reference of this JsonUsed.
        :rtype: JsonReference
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this JsonUsed.


        :param reference: The reference of this JsonUsed.
        :type reference: JsonReference
        """

        self._reference = reference

    @property
    def was_executed(self):
        """Gets the was_executed of this JsonUsed.


        :return: The was_executed of this JsonUsed.
        :rtype: bool
        """
        return self._was_executed

    @was_executed.setter
    def was_executed(self, was_executed):
        """Sets the was_executed of this JsonUsed.


        :param was_executed: The was_executed of this JsonUsed.
        :type was_executed: bool
        """

        self._was_executed = was_executed
