# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov import util


class JsonUsed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concrete_type=None, was_executed=None):  # noqa: E501
        """JsonUsed - a model defined in OpenAPI

        :param concrete_type: The concrete_type of this JsonUsed.  # noqa: E501
        :type concrete_type: str
        :param was_executed: The was_executed of this JsonUsed.  # noqa: E501
        :type was_executed: bool
        """
        self.openapi_types = {
            'concrete_type': str,
            'was_executed': bool
        }

        self.attribute_map = {
            'concrete_type': 'concreteType',
            'was_executed': 'wasExecuted'
        }

        self._concrete_type = concrete_type
        self._was_executed = was_executed

    @classmethod
    def from_dict(cls, dikt) -> 'JsonUsed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The json_Used of this JsonUsed.  # noqa: E501
        :rtype: JsonUsed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concrete_type(self):
        """Gets the concrete_type of this JsonUsed.


        :return: The concrete_type of this JsonUsed.
        :rtype: str
        """
        return self._concrete_type

    @concrete_type.setter
    def concrete_type(self, concrete_type):
        """Sets the concrete_type of this JsonUsed.


        :param concrete_type: The concrete_type of this JsonUsed.
        :type concrete_type: str
        """

        self._concrete_type = concrete_type

    @property
    def was_executed(self):
        """Gets the was_executed of this JsonUsed.


        :return: The was_executed of this JsonUsed.
        :rtype: bool
        """
        return self._was_executed

    @was_executed.setter
    def was_executed(self, was_executed):
        """Sets the was_executed of this JsonUsed.


        :param was_executed: The was_executed of this JsonUsed.
        :type was_executed: bool
        """

        self._was_executed = was_executed
