# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov.models.reference import Reference
from synprov import util

from synprov.models.reference import Reference  # noqa: E501

class ActivityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, used=None, name=None, description=None):  # noqa: E501
        """ActivityRequest - a model defined in OpenAPI

        :param used: The used of this ActivityRequest.  # noqa: E501
        :type used: List[Reference]
        :param name: The name of this ActivityRequest.  # noqa: E501
        :type name: str
        :param description: The description of this ActivityRequest.  # noqa: E501
        :type description: str
        """
        self.openapi_types = {
            'used': List[Reference],
            'name': str,
            'description': str
        }

        self.attribute_map = {
            'used': 'used',
            'name': 'name',
            'description': 'description'
        }

        self._used = used
        self._name = name
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'ActivityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ActivityRequest of this ActivityRequest.  # noqa: E501
        :rtype: ActivityRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def used(self):
        """Gets the used of this ActivityRequest.


        :return: The used of this ActivityRequest.
        :rtype: List[Reference]
        """
        return self._used

    @used.setter
    def used(self, used):
        """Sets the used of this ActivityRequest.


        :param used: The used of this ActivityRequest.
        :type used: List[Reference]
        """

        self._used = used

    @property
    def name(self):
        """Gets the name of this ActivityRequest.


        :return: The name of this ActivityRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActivityRequest.


        :param name: The name of this ActivityRequest.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this ActivityRequest.


        :return: The description of this ActivityRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ActivityRequest.


        :param description: The description of this ActivityRequest.
        :type description: str
        """

        self._description = description
