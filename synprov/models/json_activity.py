# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov.models.json_used import JsonUsed
from synprov import util

from synprov.models.json_used import JsonUsed  # noqa: E501

class JsonActivity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, used=None, created_by=None, etag=None, modified_on=None, modified_by=None, created_on=None, name=None, description=None):  # noqa: E501
        """JsonActivity - a model defined in OpenAPI

        :param id: The id of this JsonActivity.  # noqa: E501
        :type id: str
        :param used: The used of this JsonActivity.  # noqa: E501
        :type used: List[JsonUsed]
        :param created_by: The created_by of this JsonActivity.  # noqa: E501
        :type created_by: str
        :param etag: The etag of this JsonActivity.  # noqa: E501
        :type etag: str
        :param modified_on: The modified_on of this JsonActivity.  # noqa: E501
        :type modified_on: float
        :param modified_by: The modified_by of this JsonActivity.  # noqa: E501
        :type modified_by: str
        :param created_on: The created_on of this JsonActivity.  # noqa: E501
        :type created_on: float
        :param name: The name of this JsonActivity.  # noqa: E501
        :type name: str
        :param description: The description of this JsonActivity.  # noqa: E501
        :type description: str
        """
        self.openapi_types = {
            'id': str,
            'used': List[JsonUsed],
            'created_by': str,
            'etag': str,
            'modified_on': float,
            'modified_by': str,
            'created_on': float,
            'name': str,
            'description': str
        }

        self.attribute_map = {
            'id': 'id',
            'used': 'used',
            'created_by': 'createdBy',
            'etag': 'etag',
            'modified_on': 'modifiedOn',
            'modified_by': 'modifiedBy',
            'created_on': 'createdOn',
            'name': 'name',
            'description': 'description'
        }

        self._id = id
        self._used = used
        self._created_by = created_by
        self._etag = etag
        self._modified_on = modified_on
        self._modified_by = modified_by
        self._created_on = created_on
        self._name = name
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'JsonActivity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The json_Activity of this JsonActivity.  # noqa: E501
        :rtype: JsonActivity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this JsonActivity.


        :return: The id of this JsonActivity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this JsonActivity.


        :param id: The id of this JsonActivity.
        :type id: str
        """

        self._id = id

    @property
    def used(self):
        """Gets the used of this JsonActivity.


        :return: The used of this JsonActivity.
        :rtype: List[JsonUsed]
        """
        return self._used

    @used.setter
    def used(self, used):
        """Sets the used of this JsonActivity.


        :param used: The used of this JsonActivity.
        :type used: List[JsonUsed]
        """

        self._used = used

    @property
    def created_by(self):
        """Gets the created_by of this JsonActivity.


        :return: The created_by of this JsonActivity.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this JsonActivity.


        :param created_by: The created_by of this JsonActivity.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def etag(self):
        """Gets the etag of this JsonActivity.


        :return: The etag of this JsonActivity.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this JsonActivity.


        :param etag: The etag of this JsonActivity.
        :type etag: str
        """

        self._etag = etag

    @property
    def modified_on(self):
        """Gets the modified_on of this JsonActivity.


        :return: The modified_on of this JsonActivity.
        :rtype: float
        """
        return self._modified_on

    @modified_on.setter
    def modified_on(self, modified_on):
        """Sets the modified_on of this JsonActivity.


        :param modified_on: The modified_on of this JsonActivity.
        :type modified_on: float
        """

        self._modified_on = modified_on

    @property
    def modified_by(self):
        """Gets the modified_by of this JsonActivity.


        :return: The modified_by of this JsonActivity.
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this JsonActivity.


        :param modified_by: The modified_by of this JsonActivity.
        :type modified_by: str
        """

        self._modified_by = modified_by

    @property
    def created_on(self):
        """Gets the created_on of this JsonActivity.


        :return: The created_on of this JsonActivity.
        :rtype: float
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this JsonActivity.


        :param created_on: The created_on of this JsonActivity.
        :type created_on: float
        """

        self._created_on = created_on

    @property
    def name(self):
        """Gets the name of this JsonActivity.


        :return: The name of this JsonActivity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this JsonActivity.


        :param name: The name of this JsonActivity.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this JsonActivity.


        :return: The description of this JsonActivity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this JsonActivity.


        :param description: The description of this JsonActivity.
        :type description: str
        """

        self._description = description
