# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from synprov.models.base_model_ import Model
from synprov import util


class Reference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_version_number=None, entity_id=None, role=None):  # noqa: E501
        """Reference - a model defined in OpenAPI

        :param entity_version_number: The entity_version_number of this Reference.  # noqa: E501
        :type entity_version_number: int
        :param entity_id: The entity_id of this Reference.  # noqa: E501
        :type entity_id: str
        :param role: The role of this Reference.  # noqa: E501
        :type role: str
        """
        self.openapi_types = {
            'entity_version_number': int,
            'entity_id': str,
            'role': str
        }

        self.attribute_map = {
            'entity_version_number': 'entityVersionNumber',
            'entity_id': 'entityId',
            'role': 'role'
        }

        self._entity_version_number = entity_version_number
        self._entity_id = entity_id
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'Reference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Reference of this Reference.  # noqa: E501
        :rtype: Reference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_version_number(self):
        """Gets the entity_version_number of this Reference.


        :return: The entity_version_number of this Reference.
        :rtype: int
        """
        return self._entity_version_number

    @entity_version_number.setter
    def entity_version_number(self, entity_version_number):
        """Sets the entity_version_number of this Reference.


        :param entity_version_number: The entity_version_number of this Reference.
        :type entity_version_number: int
        """

        self._entity_version_number = entity_version_number

    @property
    def entity_id(self):
        """Gets the entity_id of this Reference.


        :return: The entity_id of this Reference.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this Reference.


        :param entity_id: The entity_id of this Reference.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def role(self):
        """Gets the role of this Reference.


        :return: The role of this Reference.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this Reference.


        :param role: The role of this Reference.
        :type role: str
        """

        self._role = role
