openapi: 3.0.1
info:
  description: <h1>Synapse Repository Services</h1><p>Sage Bionetworks Platform</p>
  title: Provenance Service
  version: 0.1.0
servers:
- url: /rest
tags:
- description: "."
  name: Activities
- description: "."
  name: References
- description: "."
  name: Agents
paths:
  /prov/v1/activities:
    get:
      description: List Activities
      operationId: list_activities
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Activity'
                type: array
          description: "."
      summary: "."
      tags:
      - Activities
      x-openapi-router-controller: synprov.controllers.activities_controller
    post:
      description: |-
        Create a new Activity. If the passed Activity object contains a Used
        array, you must set the concreteType field of each Used subclass.
      operationId: create_activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: "."
      summary: Create a new.
      tags:
      - Activities
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.activities_controller
  /prov/v1/activities/{id}:
    delete:
      description: Delete an Activity
      operationId: delete_activity
      parameters:
      - description: The id of activity to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: "."
      summary: Delete an.
      tags:
      - Activities
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.activities_controller
    get:
      description: Get an existing Activity
      operationId: get_activity
      parameters:
      - description: The ID of the activity to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: "."
      summary: Get an existing.
      tags:
      - Activities
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.activities_controller
    put:
      description: Update an Activity
      operationId: update_activity
      parameters:
      - description: The id of the activity to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        description: Update an Activity
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: "."
      summary: Update an.
      tags:
      - Activities
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.activities_controller
  /prov/v1/agents:
    get:
      description: List Agents
      operationId: list_agents
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Agent'
                type: array
          description: "."
      summary: "."
      tags:
      - Agents
      x-openapi-router-controller: synprov.controllers.agents_controller
  /prov/v1/agents/{id}:
    get:
      description: Get an existing Agent
      operationId: get_agent
      parameters:
      - description: The ID of the agent to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: "."
      summary: Get an existing.
      tags:
      - Agents
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.agents_controller
  /prov/v1/references:
    get:
      description: List References
      operationId: list_references
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reference'
                type: array
          description: "."
      summary: "."
      tags:
      - References
      x-openapi-router-controller: synprov.controllers.references_controller
  /prov/v1/references/{id}:
    get:
      description: Get an existing Reference
      operationId: get_reference
      parameters:
      - description: The ID of the entity to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: "."
      summary: Get an existing.
      tags:
      - References
      x-codegen-request-body-name: body
      x-openapi-router-controller: synprov.controllers.references_controller
components:
  schemas:
    ActivityRequest:
      example:
        name: name
        description: description
        used:
        - role: role
          entityId: entityId
          entityVersionNumber: 0
        - role: role
          entityId: entityId
          entityVersionNumber: 0
      properties:
        used:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        generated:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        name:
          type: string
        description:
          type: string
      title: ActivityRequest
      type: object
    Activity:
      example:
        modifiedOn: 2000-01-23T04:56:07.000+00:00
        generated:
        - role: role
          targetId: entityId
          targetVersionNumber: 0
        - role: role
          targetId: entityId
          targetVersionNumber: 0
        createdBy: createdBy
        name: name
        description: description
        etag: etag
        modifiedBy: modifiedBy
        id: id
        used:
        - role: role
          targetId: entityId
          targetVersionNumber: 0
        - role: role
          targetId: entityId
          targetVersionNumber: 0
        createdOn: 2000-01-23T04:56:07.000+00:00
        agents:
        - agentId: agentId
          role: role
        - agentId: agentId
          role: role
      properties:
        id:
          type: string
        used:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        generated:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        createdBy:
          type: string
        etag:
          type: string
        modifiedOn:
          format: date-time
          type: string
        modifiedBy:
          type: string
        createdOn:
          format: date-time
          type: string
        name:
          type: string
        description:
          type: string
      title: Activity
      type: object
    Reference:
      example:
        role: role
        targetId: entityId
        targetVersionNumber: 0
      properties:
        targetVersionNumber:
          format: int32
          type: integer
        targetId:
          type: string
        role:
          type: string
      title: Reference
      type: object
    Agent:
      example:
        agentId: agentId
        role: role
      properties:
        agentId:
          type: string
        role:
          type: string
      title: Agent
      type: object
